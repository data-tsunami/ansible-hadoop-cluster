---
- name: Create local directories
  file: path={{item}} owner=hadoop group=hadoop mode=0755 state=directory
  with_items:
     - /srv/nfs
     - /srv/hadoop
     - /srv/hadoop/data
     - /srv/hadoop/secondary-namenode-checkpoint
     - /srv/hadoop/mapred
     - /srv/hadoop/mapred/local
     - /srv/hadoop/mapred/system
  tags: hadoop

- name: Setup fstab
  mount: name=/srv/nfs src={{ nfs_server }}:{{ nfs_export }} fstype=nfs4 opts=rw state=mounted
  tags: hadoop

- name: Create NFS directories
  file: path={{item}} owner=hadoop group=hadoop mode=0775 state=directory
  with_items:
     - /srv/nfs/hadoop-{{hadoop_version}}-logs
  tags: hadoop

- name: Download Hadoop (using proxy)
  sudo_user: hadoop
  get_url: url={{hadoop_download_url}} dest=/home/hadoop/hadoop-bin.tgz # Ansible 1.3 -> sha256sum={{hadoop_download_sha256}}
  environment:
    http_proxy: "{{proxy}}"
    https_proxy: "{{proxy}}"
  when: proxy is defined
  tags: hadoop

- name: Download Hadoop (without proxy)
  # FIXME: this is almos equals to the 'with proxy' version!
  sudo_user: hadoop
  get_url: url={{hadoop_download_url}} dest=/home/hadoop/hadoop-bin.tgz # Ansible 1.3 -> sha256sum={{hadoop_download_sha256}}
  when: proxy is not defined
  tags: hadoop

- name: Unzip Hadoop
  sudo_user: hadoop
  command: tar xzf /home/hadoop/hadoop-bin.tgz -C /home/hadoop creates=/home/hadoop/{{hadoop_unzip_dir}}
  tags: hadoop

- name: Link Snappy libs to Hadoop native libs directory
  command: ln -s /usr/lib64/{{item}} /home/hadoop/{{hadoop_unzip_dir}}/lib/native/Linux-amd64-64/{{item}}
           creates=/home/hadoop/{{hadoop_unzip_dir}}/lib/native/Linux-amd64-64/{{item}}
  with_items:
     - libsnappy.so.1
     - libsnappy.so.1.1.3
     - liblzo2.so
     - liblzo2.so.2
     - liblzo2.so.2.0.0
  tags: hadoop

- name: Link Snappy libs to Hadoop native libs directory (extra)
  command: ln -s /usr/lib64/libsnappy.so.1.1.3 /home/hadoop/{{hadoop_unzip_dir}}/lib/native/Linux-amd64-64/libsnappy.so
           creates=/home/hadoop/{{hadoop_unzip_dir}}/lib/native/Linux-amd64-64/libsnappy.so
  tags: hadoop

- name: Configure Hadoop
  template: src={{item}} dest=/home/hadoop/{{ hadoop_unzip_dir }}/conf/{{item}}
  sudo_user: hadoop
  with_items:
     - hdfs-site.xml
     - mapred-site.xml
     - core-site.xml
     - masters # this file contains the name or IP of the secondary name node
     - slaves  # this file contains the names or IPs of the slaves nodes
  tags:
     - hadoop
     - hadoopconf

- name: Configure Hadoop environment
  sudo_user: hadoop
  lineinfile: dest=/home/hadoop/{{ hadoop_unzip_dir }}/conf/hadoop-env.sh regexp="^{{item.re}}"  line="{{item.line}}"
  with_items:
     - { re: 'export HADOOP_HEAPSIZE=', line: 'export HADOOP_HEAPSIZE=512' }
     - { re: 'export HADOOP_SSH_OPTS=', line: 'export HADOOP_SSH_OPTS=\"-o ConnectTimeout=5 -o SendEnv=HADOOP_CONF_DIR -o StrictHostKeyChecking=no\"' }
     - { re: 'export HADOOP_LOG_DIR=',  line: 'export HADOOP_LOG_DIR=/srv/nfs/hadoop-{{hadoop_version}}-logs' }
     #-{ re: 'export JAVA_HOME=',       line: 'export JAVA_HOME={{  }}' }
  tags:
     - hadoop
     - hadoopconf

- name: Configure JAVA_HOME for OpenJdk
  # TODO: this is too repetitive and error prone!
  sudo_user: hadoop
  lineinfile: dest=/home/hadoop/{{ hadoop_unzip_dir }}/conf/hadoop-env.sh regexp="^{{item.re}}"  line="{{item.line}}"
  with_items:
     - { re: 'export JAVA_HOME=',       line: 'export JAVA_HOME={{openjdk_java_home}}' }
  when: use_custom_jdk6 is not defined
  tags:
     - hadoop
     - hadoopconf

- name: Configure JAVA_HOME for custom JRE
  # TODO: this is too repetitive and error prone!
  sudo_user: hadoop
  lineinfile: dest=/home/hadoop/{{ hadoop_unzip_dir }}/conf/hadoop-env.sh regexp="^{{item.re}}"  line="{{item.line}}"
  with_items:
     - { re: 'export JAVA_HOME=',       line: 'export JAVA_HOME={{custom_jdk_java_home}}' }
  when: use_custom_jdk6 is defined
  tags:
     - hadoop
     - hadoopconf
